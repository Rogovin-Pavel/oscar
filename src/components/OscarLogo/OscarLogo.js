import React, { Component } from 'react';
import { Spring, animated } from 'react-spring/renderprops';
import { GradientPinkRed as Gradient } from '@vx/gradient';
import * as easings from 'd3-ease';
import styled from 'styled-components';

const LogoContainer = styled.div`
  display: grid;
  align-items: center;
  justify-content: center;
`;

class OscarLogo extends Component {
  constructor() {
    super();

    this.state = { offset: 0 };
    this.path = React.createRef();
    this.repeat = this.repeat.bind(this);
  }

  componentDidMount() {
    console.log('MOUNTED');
    this.setState({ offset: this.path.current.getTotalLength() });
  }

  repeat() {
    //this.forceUpdate();
  }

  render() {
    const { offset } = this.state;
    return (
      <LogoContainer>
        <svg width="250" viewBox="0 -7 160 50">
          <Gradient id="gradient-dashoffset" />
          <g fill="rgba(0,0,0, .1)" stroke="url(#gradient-dashoffset)" strokeWidth="0.5">
            <Spring
              // native
              reset
              from={{ dash: offset }}
              to={{ dash: 0 }}
              config={{
                delay: 2000,
                duration: 5000,
                easing: easings.easeCubic,
              }}
              onRest={this.repeat}
            >
              {(props) => {
                return (
                  <animated.path
                    ref={this.path}
                    strokeDasharray={offset}
                    strokeDashoffset={props.dash}
                    d="M29.4697 20.374C29.4697 23.8571 28.8838 26.9007 27.7119 29.5049C26.54 32.0928 24.8799 34.0703 22.7314 35.4375C20.583 36.8047 18.0765 37.4883 15.2119 37.4883C12.4124 37.4883 9.93034 36.8047 7.76562 35.4375C5.60091 34.054 3.91634 32.0928 2.71191 29.5537C1.52376 26.9984 0.913411 24.0443 0.880859 20.6914V18.1279C0.880859 14.71 1.47493 11.6908 2.66309 9.07031C3.85124 6.44987 5.52767 4.44792 7.69238 3.06445C9.87337 1.66471 12.3636 0.964844 15.1631 0.964844C18.0114 0.964844 20.5179 1.65658 22.6826 3.04004C24.8636 4.40723 26.54 6.40104 27.7119 9.02148C28.8838 11.6257 29.4697 14.6611 29.4697 18.1279V20.374ZM24.8066 18.0791C24.8066 13.8636 23.9603 10.6328 22.2676 8.38672C20.5749 6.12435 18.2067 4.99316 15.1631 4.99316C12.2008 4.99316 9.86523 6.12435 8.15625 8.38672C6.46354 10.6328 5.59277 13.7578 5.54395 17.7617V20.374C5.54395 24.4593 6.39844 27.6738 8.10742 30.0176C9.83268 32.3451 12.2008 33.5088 15.2119 33.5088C18.2393 33.5088 20.583 32.4102 22.2432 30.2129C23.9033 27.9993 24.7578 24.8337 24.8066 20.7158V18.0791ZM46.9746 21.1553C42.9544 19.9997 40.0247 18.5837 38.1855 16.9072C36.3626 15.2145 35.4512 13.1312 35.4512 10.6572C35.4512 7.85775 36.5661 5.54655 38.7959 3.72363C41.042 1.88444 43.9554 0.964844 47.5361 0.964844C49.9775 0.964844 52.1504 1.43685 54.0547 2.38086C55.9753 3.32487 57.4564 4.62695 58.498 6.28711C59.556 7.94727 60.085 9.76204 60.085 11.7314H55.373C55.373 9.58301 54.6895 7.89844 53.3223 6.67773C51.9551 5.44076 50.0264 4.82227 47.5361 4.82227C45.2249 4.82227 43.4183 5.33496 42.1162 6.36035C40.8304 7.36947 40.1875 8.77734 40.1875 10.584C40.1875 12.0326 40.7979 13.2614 42.0186 14.2705C43.2555 15.2633 45.347 16.1748 48.293 17.0049C51.2552 17.835 53.5664 18.7546 55.2266 19.7637C56.903 20.7565 58.14 21.9202 58.9375 23.2549C59.7513 24.5895 60.1582 26.1602 60.1582 27.9668C60.1582 30.8477 59.0352 33.1589 56.7891 34.9004C54.543 36.6257 51.54 37.4883 47.7803 37.4883C45.3389 37.4883 43.0602 37.0244 40.9443 36.0967C38.8285 35.1527 37.1927 33.8669 36.0371 32.2393C34.8978 30.6117 34.3281 28.7643 34.3281 26.6973H39.04C39.04 28.8457 39.8294 30.5465 41.4082 31.7998C43.0033 33.0368 45.1273 33.6553 47.7803 33.6553C50.2542 33.6553 52.1504 33.1507 53.4688 32.1416C54.7871 31.1325 55.4463 29.7572 55.4463 28.0156C55.4463 26.2741 54.8359 24.9313 53.6152 23.9873C52.3945 23.027 50.181 22.083 46.9746 21.1553ZM92.3359 25.7207C91.8965 29.4805 90.5049 32.3857 88.1611 34.4365C85.8337 36.471 82.7331 37.4883 78.8594 37.4883C74.6602 37.4883 71.291 35.9827 68.752 32.9717C66.2292 29.9606 64.9678 25.9323 64.9678 20.8867V17.4688C64.9678 14.1647 65.5537 11.2594 66.7256 8.75293C67.9137 6.24642 69.5902 4.32585 71.7549 2.99121C73.9196 1.6403 76.4261 0.964844 79.2744 0.964844C83.0505 0.964844 86.0778 2.02279 88.3564 4.13867C90.6351 6.23828 91.9616 9.15169 92.3359 12.8789H87.624C87.2171 10.0469 86.3301 7.99609 84.9629 6.72656C83.612 5.45703 81.7158 4.82227 79.2744 4.82227C76.2796 4.82227 73.9277 5.92904 72.2188 8.14258C70.526 10.3561 69.6797 13.5055 69.6797 17.5908V21.0332C69.6797 24.8906 70.4854 27.9587 72.0967 30.2373C73.708 32.516 75.9622 33.6553 78.8594 33.6553C81.4635 33.6553 83.4574 33.0693 84.8408 31.8975C86.2406 30.7093 87.1683 28.6504 87.624 25.7207H92.3359ZM118.386 27.7227H103.493L100.148 37H95.3145L108.889 1.45312H112.99L126.589 37H121.779L118.386 27.7227ZM104.909 23.8652H116.994L110.939 7.23926L104.909 23.8652ZM144.411 22.6201H136.062V37H131.35V1.45312H143.117C147.121 1.45312 150.197 2.36458 152.346 4.1875C154.51 6.01042 155.593 8.66341 155.593 12.1465C155.593 14.36 154.991 16.2887 153.786 17.9326C152.598 19.5765 150.938 20.8053 148.806 21.6191L157.155 36.707V37H152.126L144.411 22.6201ZM136.062 18.7871H143.264C145.591 18.7871 147.438 18.1849 148.806 16.9805C150.189 15.776 150.881 14.1647 150.881 12.1465C150.881 9.94922 150.222 8.26465 148.903 7.09277C147.601 5.9209 145.713 5.32682 143.239 5.31055H136.062V18.7871Z"
                  />
                );
              }}
            </Spring>
          </g>
        </svg>
      </LogoContainer>
    );
  }
}

export { OscarLogo };
